[
  {
    "inputs": [
      {
        "components": [
          {
            "components": [
              {
                "internalType": "uint64",
                "name": "root",
                "type": "uint64"
              },
              {
                "internalType": "address[]",
                "name": "route",
                "type": "address[]"
              }
            ],
            "internalType": "struct SubnetID",
            "name": "networkName",
            "type": "tuple"
          },
          {
            "internalType": "uint64",
            "name": "bottomUpCheckPeriod",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "topDownCheckPeriod",
            "type": "uint64"
          },
          {
            "internalType": "uint256",
            "name": "msgFee",
            "type": "uint256"
          },
          {
            "internalType": "uint8",
            "name": "majorityPercentage",
            "type": "uint8"
          }
        ],
        "internalType": "struct Gateway.ConstructorParams",
        "name": "params",
        "type": "tuple"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "AlreadyInitialized",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "AlreadyRegisteredSubnet",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "CallFailed",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "CannotReleaseZero",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "CannotSendCrossMsgToItself",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "EpochAlreadyExecuted",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "EpochNotVotable",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InconsistentPrevCheckpoint",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InsufficientFunds",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidCheckpointEpoch",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidCheckpointSource",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidCrossMsgDestinationAddress",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidCrossMsgDestinationSubnet",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidCrossMsgNonce",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidCrossMsgsSortOrder",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidMajorityPercentage",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidPostboxOwner",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "MessagesNotSorted",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotEmptySubnetCircSupply",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotEnoughBalance",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotEnoughFee",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotEnoughFunds",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotEnoughFundsForMembership",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotEnoughFundsToRelease",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotEnoughSubnetCircSupply",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotInitialized",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotRegisteredSubnet",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotSignableAccount",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotSystemActor",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotValidator",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "PostboxNotExist",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SubnetNotActive",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ValidatorAlreadyVoted",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ValidatorWeightIsZero",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ValidatorsAndWeightsLengthMismatch",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "addStake",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "appliedTopDownNonce",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "bottomUpCheckPeriod",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint64",
        "name": "epoch",
        "type": "uint64"
      }
    ],
    "name": "bottomUpCheckpointAtEpoch",
    "outputs": [
      {
        "internalType": "bool",
        "name": "exists",
        "type": "bool"
      },
      {
        "components": [
          {
            "components": [
              {
                "internalType": "uint64",
                "name": "root",
                "type": "uint64"
              },
              {
                "internalType": "address[]",
                "name": "route",
                "type": "address[]"
              }
            ],
            "internalType": "struct SubnetID",
            "name": "source",
            "type": "tuple"
          },
          {
            "internalType": "uint64",
            "name": "epoch",
            "type": "uint64"
          },
          {
            "internalType": "uint256",
            "name": "fee",
            "type": "uint256"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "components": [
                          {
                            "internalType": "uint64",
                            "name": "root",
                            "type": "uint64"
                          },
                          {
                            "internalType": "address[]",
                            "name": "route",
                            "type": "address[]"
                          }
                        ],
                        "internalType": "struct SubnetID",
                        "name": "subnetId",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "rawAddress",
                        "type": "address"
                      }
                    ],
                    "internalType": "struct IPCAddress",
                    "name": "from",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "components": [
                          {
                            "internalType": "uint64",
                            "name": "root",
                            "type": "uint64"
                          },
                          {
                            "internalType": "address[]",
                            "name": "route",
                            "type": "address[]"
                          }
                        ],
                        "internalType": "struct SubnetID",
                        "name": "subnetId",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "rawAddress",
                        "type": "address"
                      }
                    ],
                    "internalType": "struct IPCAddress",
                    "name": "to",
                    "type": "tuple"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint64",
                    "name": "nonce",
                    "type": "uint64"
                  },
                  {
                    "internalType": "bytes4",
                    "name": "method",
                    "type": "bytes4"
                  },
                  {
                    "internalType": "bytes",
                    "name": "params",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct StorableMsg",
                "name": "message",
                "type": "tuple"
              },
              {
                "internalType": "bool",
                "name": "wrapped",
                "type": "bool"
              }
            ],
            "internalType": "struct CrossMsg[]",
            "name": "crossMsgs",
            "type": "tuple[]"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "internalType": "uint64",
                    "name": "root",
                    "type": "uint64"
                  },
                  {
                    "internalType": "address[]",
                    "name": "route",
                    "type": "address[]"
                  }
                ],
                "internalType": "struct SubnetID",
                "name": "source",
                "type": "tuple"
              },
              {
                "internalType": "bytes32[]",
                "name": "checks",
                "type": "bytes32[]"
              }
            ],
            "internalType": "struct ChildCheck[]",
            "name": "children",
            "type": "tuple[]"
          },
          {
            "internalType": "bytes32",
            "name": "prevHash",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "proof",
            "type": "bytes"
          }
        ],
        "internalType": "struct BottomUpCheckpoint",
        "name": "checkpoint",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "name": "bottomUpCheckpoints",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint64",
            "name": "root",
            "type": "uint64"
          },
          {
            "internalType": "address[]",
            "name": "route",
            "type": "address[]"
          }
        ],
        "internalType": "struct SubnetID",
        "name": "source",
        "type": "tuple"
      },
      {
        "internalType": "uint64",
        "name": "epoch",
        "type": "uint64"
      },
      {
        "internalType": "uint256",
        "name": "fee",
        "type": "uint256"
      },
      {
        "internalType": "bytes32",
        "name": "prevHash",
        "type": "bytes32"
      },
      {
        "internalType": "bytes",
        "name": "proof",
        "type": "bytes"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "bottomUpNonce",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "components": [
              {
                "internalType": "uint64",
                "name": "root",
                "type": "uint64"
              },
              {
                "internalType": "address[]",
                "name": "route",
                "type": "address[]"
              }
            ],
            "internalType": "struct SubnetID",
            "name": "source",
            "type": "tuple"
          },
          {
            "internalType": "uint64",
            "name": "epoch",
            "type": "uint64"
          },
          {
            "internalType": "uint256",
            "name": "fee",
            "type": "uint256"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "components": [
                          {
                            "internalType": "uint64",
                            "name": "root",
                            "type": "uint64"
                          },
                          {
                            "internalType": "address[]",
                            "name": "route",
                            "type": "address[]"
                          }
                        ],
                        "internalType": "struct SubnetID",
                        "name": "subnetId",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "rawAddress",
                        "type": "address"
                      }
                    ],
                    "internalType": "struct IPCAddress",
                    "name": "from",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "components": [
                          {
                            "internalType": "uint64",
                            "name": "root",
                            "type": "uint64"
                          },
                          {
                            "internalType": "address[]",
                            "name": "route",
                            "type": "address[]"
                          }
                        ],
                        "internalType": "struct SubnetID",
                        "name": "subnetId",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "rawAddress",
                        "type": "address"
                      }
                    ],
                    "internalType": "struct IPCAddress",
                    "name": "to",
                    "type": "tuple"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint64",
                    "name": "nonce",
                    "type": "uint64"
                  },
                  {
                    "internalType": "bytes4",
                    "name": "method",
                    "type": "bytes4"
                  },
                  {
                    "internalType": "bytes",
                    "name": "params",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct StorableMsg",
                "name": "message",
                "type": "tuple"
              },
              {
                "internalType": "bool",
                "name": "wrapped",
                "type": "bool"
              }
            ],
            "internalType": "struct CrossMsg[]",
            "name": "crossMsgs",
            "type": "tuple[]"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "internalType": "uint64",
                    "name": "root",
                    "type": "uint64"
                  },
                  {
                    "internalType": "address[]",
                    "name": "route",
                    "type": "address[]"
                  }
                ],
                "internalType": "struct SubnetID",
                "name": "source",
                "type": "tuple"
              },
              {
                "internalType": "bytes32[]",
                "name": "checks",
                "type": "bytes32[]"
              }
            ],
            "internalType": "struct ChildCheck[]",
            "name": "children",
            "type": "tuple[]"
          },
          {
            "internalType": "bytes32",
            "name": "prevHash",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "proof",
            "type": "bytes"
          }
        ],
        "internalType": "struct BottomUpCheckpoint",
        "name": "commit",
        "type": "tuple"
      }
    ],
    "name": "commitChildCheck",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "crossMsgFee",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "executableQueue",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "period",
        "type": "uint64"
      },
      {
        "internalType": "uint64",
        "name": "first",
        "type": "uint64"
      },
      {
        "internalType": "uint64",
        "name": "last",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint64",
            "name": "root",
            "type": "uint64"
          },
          {
            "internalType": "address[]",
            "name": "route",
            "type": "address[]"
          }
        ],
        "internalType": "struct SubnetID",
        "name": "subnetId",
        "type": "tuple"
      }
    ],
    "name": "fund",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "genesisEpoch",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getNetworkName",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint64",
            "name": "root",
            "type": "uint64"
          },
          {
            "internalType": "address[]",
            "name": "route",
            "type": "address[]"
          }
        ],
        "internalType": "struct SubnetID",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint64",
            "name": "root",
            "type": "uint64"
          },
          {
            "internalType": "address[]",
            "name": "route",
            "type": "address[]"
          }
        ],
        "internalType": "struct SubnetID",
        "name": "subnetId",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "getSubnetTopDownMsg",
    "outputs": [
      {
        "components": [
          {
            "components": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint64",
                        "name": "root",
                        "type": "uint64"
                      },
                      {
                        "internalType": "address[]",
                        "name": "route",
                        "type": "address[]"
                      }
                    ],
                    "internalType": "struct SubnetID",
                    "name": "subnetId",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "rawAddress",
                    "type": "address"
                  }
                ],
                "internalType": "struct IPCAddress",
                "name": "from",
                "type": "tuple"
              },
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint64",
                        "name": "root",
                        "type": "uint64"
                      },
                      {
                        "internalType": "address[]",
                        "name": "route",
                        "type": "address[]"
                      }
                    ],
                    "internalType": "struct SubnetID",
                    "name": "subnetId",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "rawAddress",
                    "type": "address"
                  }
                ],
                "internalType": "struct IPCAddress",
                "name": "to",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              },
              {
                "internalType": "uint64",
                "name": "nonce",
                "type": "uint64"
              },
              {
                "internalType": "bytes4",
                "name": "method",
                "type": "bytes4"
              },
              {
                "internalType": "bytes",
                "name": "params",
                "type": "bytes"
              }
            ],
            "internalType": "struct StorableMsg",
            "name": "message",
            "type": "tuple"
          },
          {
            "internalType": "bool",
            "name": "wrapped",
            "type": "bool"
          }
        ],
        "internalType": "struct CrossMsg",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint64",
            "name": "root",
            "type": "uint64"
          },
          {
            "internalType": "address[]",
            "name": "route",
            "type": "address[]"
          }
        ],
        "internalType": "struct SubnetID",
        "name": "subnetId",
        "type": "tuple"
      }
    ],
    "name": "getSubnetTopDownMsgsLength",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint64",
        "name": "epoch",
        "type": "uint64"
      },
      {
        "internalType": "address",
        "name": "submitter",
        "type": "address"
      }
    ],
    "name": "hasValidatorVotedForSubmission",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint64",
        "name": "_genesisEpoch",
        "type": "uint64"
      }
    ],
    "name": "initGenesisEpoch",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "initialized",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "kill",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "lastVotingExecutedEpoch",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "majorityPercentage",
    "outputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "minStake",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "name": "postbox",
    "outputs": [
      {
        "components": [
          {
            "components": [
              {
                "components": [
                  {
                    "internalType": "uint64",
                    "name": "root",
                    "type": "uint64"
                  },
                  {
                    "internalType": "address[]",
                    "name": "route",
                    "type": "address[]"
                  }
                ],
                "internalType": "struct SubnetID",
                "name": "subnetId",
                "type": "tuple"
              },
              {
                "internalType": "address",
                "name": "rawAddress",
                "type": "address"
              }
            ],
            "internalType": "struct IPCAddress",
            "name": "from",
            "type": "tuple"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "internalType": "uint64",
                    "name": "root",
                    "type": "uint64"
                  },
                  {
                    "internalType": "address[]",
                    "name": "route",
                    "type": "address[]"
                  }
                ],
                "internalType": "struct SubnetID",
                "name": "subnetId",
                "type": "tuple"
              },
              {
                "internalType": "address",
                "name": "rawAddress",
                "type": "address"
              }
            ],
            "internalType": "struct IPCAddress",
            "name": "to",
            "type": "tuple"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          },
          {
            "internalType": "uint64",
            "name": "nonce",
            "type": "uint64"
          },
          {
            "internalType": "bytes4",
            "name": "method",
            "type": "bytes4"
          },
          {
            "internalType": "bytes",
            "name": "params",
            "type": "bytes"
          }
        ],
        "internalType": "struct StorableMsg",
        "name": "message",
        "type": "tuple"
      },
      {
        "internalType": "bool",
        "name": "wrapped",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "postboxHasOwner",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "msgCid",
        "type": "bytes32"
      }
    ],
    "name": "propagate",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "register",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "release",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "releaseRewards",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "releaseStake",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint64",
            "name": "root",
            "type": "uint64"
          },
          {
            "internalType": "address[]",
            "name": "route",
            "type": "address[]"
          }
        ],
        "internalType": "struct SubnetID",
        "name": "destination",
        "type": "tuple"
      },
      {
        "components": [
          {
            "components": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint64",
                        "name": "root",
                        "type": "uint64"
                      },
                      {
                        "internalType": "address[]",
                        "name": "route",
                        "type": "address[]"
                      }
                    ],
                    "internalType": "struct SubnetID",
                    "name": "subnetId",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "rawAddress",
                    "type": "address"
                  }
                ],
                "internalType": "struct IPCAddress",
                "name": "from",
                "type": "tuple"
              },
              {
                "components": [
                  {
                    "components": [
                      {
                        "internalType": "uint64",
                        "name": "root",
                        "type": "uint64"
                      },
                      {
                        "internalType": "address[]",
                        "name": "route",
                        "type": "address[]"
                      }
                    ],
                    "internalType": "struct SubnetID",
                    "name": "subnetId",
                    "type": "tuple"
                  },
                  {
                    "internalType": "address",
                    "name": "rawAddress",
                    "type": "address"
                  }
                ],
                "internalType": "struct IPCAddress",
                "name": "to",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              },
              {
                "internalType": "uint64",
                "name": "nonce",
                "type": "uint64"
              },
              {
                "internalType": "bytes4",
                "name": "method",
                "type": "bytes4"
              },
              {
                "internalType": "bytes",
                "name": "params",
                "type": "bytes"
              }
            ],
            "internalType": "struct StorableMsg",
            "name": "message",
            "type": "tuple"
          },
          {
            "internalType": "bool",
            "name": "wrapped",
            "type": "bool"
          }
        ],
        "internalType": "struct CrossMsg",
        "name": "crossMsg",
        "type": "tuple"
      }
    ],
    "name": "sendCross",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address[]",
        "name": "validators",
        "type": "address[]"
      },
      {
        "internalType": "uint256[]",
        "name": "weights",
        "type": "uint256[]"
      }
    ],
    "name": "setMembership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "submissionPeriod",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint64",
            "name": "epoch",
            "type": "uint64"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "components": [
                          {
                            "internalType": "uint64",
                            "name": "root",
                            "type": "uint64"
                          },
                          {
                            "internalType": "address[]",
                            "name": "route",
                            "type": "address[]"
                          }
                        ],
                        "internalType": "struct SubnetID",
                        "name": "subnetId",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "rawAddress",
                        "type": "address"
                      }
                    ],
                    "internalType": "struct IPCAddress",
                    "name": "from",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "components": [
                          {
                            "internalType": "uint64",
                            "name": "root",
                            "type": "uint64"
                          },
                          {
                            "internalType": "address[]",
                            "name": "route",
                            "type": "address[]"
                          }
                        ],
                        "internalType": "struct SubnetID",
                        "name": "subnetId",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "rawAddress",
                        "type": "address"
                      }
                    ],
                    "internalType": "struct IPCAddress",
                    "name": "to",
                    "type": "tuple"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint64",
                    "name": "nonce",
                    "type": "uint64"
                  },
                  {
                    "internalType": "bytes4",
                    "name": "method",
                    "type": "bytes4"
                  },
                  {
                    "internalType": "bytes",
                    "name": "params",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct StorableMsg",
                "name": "message",
                "type": "tuple"
              },
              {
                "internalType": "bool",
                "name": "wrapped",
                "type": "bool"
              }
            ],
            "internalType": "struct CrossMsg[]",
            "name": "topDownMsgs",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct TopDownCheckpoint",
        "name": "checkpoint",
        "type": "tuple"
      }
    ],
    "name": "submitTopDownCheckpoint",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "name": "subnets",
    "outputs": [
      {
        "internalType": "enum Status",
        "name": "status",
        "type": "uint8"
      },
      {
        "internalType": "uint64",
        "name": "topDownNonce",
        "type": "uint64"
      },
      {
        "internalType": "uint64",
        "name": "appliedBottomUpNonce",
        "type": "uint64"
      },
      {
        "internalType": "uint256",
        "name": "stake",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "genesisEpoch",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "circSupply",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint64",
            "name": "root",
            "type": "uint64"
          },
          {
            "internalType": "address[]",
            "name": "route",
            "type": "address[]"
          }
        ],
        "internalType": "struct SubnetID",
        "name": "id",
        "type": "tuple"
      },
      {
        "components": [
          {
            "components": [
              {
                "internalType": "uint64",
                "name": "root",
                "type": "uint64"
              },
              {
                "internalType": "address[]",
                "name": "route",
                "type": "address[]"
              }
            ],
            "internalType": "struct SubnetID",
            "name": "source",
            "type": "tuple"
          },
          {
            "internalType": "uint64",
            "name": "epoch",
            "type": "uint64"
          },
          {
            "internalType": "uint256",
            "name": "fee",
            "type": "uint256"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "components": [
                      {
                        "components": [
                          {
                            "internalType": "uint64",
                            "name": "root",
                            "type": "uint64"
                          },
                          {
                            "internalType": "address[]",
                            "name": "route",
                            "type": "address[]"
                          }
                        ],
                        "internalType": "struct SubnetID",
                        "name": "subnetId",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "rawAddress",
                        "type": "address"
                      }
                    ],
                    "internalType": "struct IPCAddress",
                    "name": "from",
                    "type": "tuple"
                  },
                  {
                    "components": [
                      {
                        "components": [
                          {
                            "internalType": "uint64",
                            "name": "root",
                            "type": "uint64"
                          },
                          {
                            "internalType": "address[]",
                            "name": "route",
                            "type": "address[]"
                          }
                        ],
                        "internalType": "struct SubnetID",
                        "name": "subnetId",
                        "type": "tuple"
                      },
                      {
                        "internalType": "address",
                        "name": "rawAddress",
                        "type": "address"
                      }
                    ],
                    "internalType": "struct IPCAddress",
                    "name": "to",
                    "type": "tuple"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint64",
                    "name": "nonce",
                    "type": "uint64"
                  },
                  {
                    "internalType": "bytes4",
                    "name": "method",
                    "type": "bytes4"
                  },
                  {
                    "internalType": "bytes",
                    "name": "params",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct StorableMsg",
                "name": "message",
                "type": "tuple"
              },
              {
                "internalType": "bool",
                "name": "wrapped",
                "type": "bool"
              }
            ],
            "internalType": "struct CrossMsg[]",
            "name": "crossMsgs",
            "type": "tuple[]"
          },
          {
            "components": [
              {
                "components": [
                  {
                    "internalType": "uint64",
                    "name": "root",
                    "type": "uint64"
                  },
                  {
                    "internalType": "address[]",
                    "name": "route",
                    "type": "address[]"
                  }
                ],
                "internalType": "struct SubnetID",
                "name": "source",
                "type": "tuple"
              },
              {
                "internalType": "bytes32[]",
                "name": "checks",
                "type": "bytes32[]"
              }
            ],
            "internalType": "struct ChildCheck[]",
            "name": "children",
            "type": "tuple[]"
          },
          {
            "internalType": "bytes32",
            "name": "prevHash",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "proof",
            "type": "bytes"
          }
        ],
        "internalType": "struct BottomUpCheckpoint",
        "name": "prevCheckpoint",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "topDownCheckPeriod",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalSubnets",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalWeight",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "validatorNonce",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "validatorSet",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "msgCid",
        "type": "bytes32"
      },
      {
        "internalType": "address[]",
        "name": "owners",
        "type": "address[]"
      }
    ],
    "name": "whitelistPropagator",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]